name: build

on:
  push:
    branches:
      - '*'
#      - '!compile_time_ninja_check_74'
  pull_request:
    branches:
      - '*'
#      - '!compile_time_ninja_check_74'
  schedule:
    - cron: '16 0 * * 6'  # <https://crontab.guru/#16_0_*_*_6> - "At 00:16 on Saturday."

jobs:
  clang-format:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master
      - uses: DoozyX/clang-format-lint-action@v0.5
        with:
          source: '.'
          exclude: './lib'
          clangFormatVersion: 9
  build:
    env:
      BUILD_DIR_PATH: ${{ github.workspace }}/${{ matrix.relative_build_dir_path }}build_space
    strategy:
      fail-fast: false
      matrix:
        buildtype: [
          windows-latest,
          windows-latest (clangcl),
          windows-2016,
          ubuntu-latest,
          ubuntu-latest-ninja,
          macOS-latest,
          macOS-latest-unity,
          macOS-latest-ninja,
          macOS-latest-ninja-unity,
        ]
        include:
        - buildtype: windows-latest
          os: windows-latest
          generator: '"Visual Studio 16 2019"'
          relative_build_dir_path: ''

        - buildtype: windows-latest (clangcl)
          os: windows-latest
          generator: '"Visual Studio 16 2019" -T "clangcl"'
          relative_build_dir_path: ''

        - buildtype: windows-2016
          os: windows-2016
          generator: '"Visual Studio 15 2017"'
          relative_build_dir_path: ''

        - buildtype: ubuntu-latest
          os: ubuntu-latest
          generator: '"Unix Makefiles"'
          relative_build_dir_path: ''

        - buildtype: ubuntu-latest-ninja
          os: ubuntu-latest
          generator: '"Ninja"'
          relative_build_dir_path: '../'

        - buildtype:  macOS-latest
          os: macOS-latest
          generator: '"Unix Makefiles"'
          relative_build_dir_path: ''

        - buildtype:  macOS-latest-unity
          os: macOS-latest
          generator: '"Unix Makefiles" -DCMAKE_UNITY_BUILD=yes -DCMAKE_UNITY_BUILD_BATCH_SIZE=50'
          relative_build_dir_path: ''

        - buildtype:  macOS-latest-ninja
          os: macOS-latest
          generator: '"Ninja"'
          relative_build_dir_path: '../'

        - buildtype:  macOS-latest-ninja-unity
          os: macOS-latest
          generator: '"Ninja" -DCMAKE_UNITY_BUILD=yes -DCMAKE_UNITY_BUILD_BATCH_SIZE=50 -DCMAKE_CXX_FLAGS_INIT=-DAPPROVAL_TESTS_DISABLE_FILE_MACRO_CHECK'
          relative_build_dir_path: ''
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@master
    - uses: seanmiddleditch/gha-setup-ninja@v3
      if: contains(matrix.generator, 'Ninja')

    - name: configure
      run: |
        mkdir ${{ env.BUILD_DIR_PATH }}
        cd ${{ env.BUILD_DIR_PATH }}
        cmake --version
        cmake -G ${{ matrix.generator }} ${{ github.workspace }} -DCMAKE_BUILD_TYPE=Debug
    - name: build
      run: |
        cd ${{ env.BUILD_DIR_PATH }}
        cmake --build . --parallel 4
    - name: test
      run: |
        cd ${{ env.BUILD_DIR_PATH }}
        ctest --verbose --output-on-failure -C Debug

